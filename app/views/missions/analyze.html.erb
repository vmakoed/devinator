<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
  <!-- Breadcrumb -->
  <nav class="text-sm breadcrumbs mb-6">
    <ol class="list-none p-0 inline-flex">
      <li class="flex items-center">
        <%= link_to "Missions", root_path, class: "text-blue-600 hover:text-blue-800" %>
        <svg class="fill-current w-3 h-3 mx-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">
          <path d="m285.476 272.971-134.95 134.95c-15.621 15.621-40.947 15.621-56.569 0l-135.83-135.83c-15.621-15.621-15.621-40.947 0-56.569l135.83-135.83c15.621-15.621 40.947-15.621 56.569 0l134.95 134.95c15.621 15.621 15.621 40.947 0 56.569z"/>
        </svg>
      </li>
      <li class="flex items-center">
        <%= link_to "Input JQL Query", query_mission_path(@mission), class: "text-blue-600 hover:text-blue-800" %>
        <svg class="fill-current w-3 h-3 mx-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">
          <path d="m285.476 272.971-134.95 134.95c-15.621 15.621-40.947 15.621-56.569 0l-135.83-135.83c-15.621-15.621-15.621-40.947 0-56.569l135.83-135.83c15.621-15.621 40.947-15.621 56.569 0l134.95 134.95c15.621 15.621 15.621 40.947 0 56.569z"/>
        </svg>
      </li>
      <li class="flex items-center">
        <%= link_to "Preview Tickets", preview_mission_tickets_path(@mission), class: "text-blue-600 hover:text-blue-800" %>
        <svg class="fill-current w-3 h-3 mx-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">
          <path d="m285.476 272.971-134.95 134.95c-15.621 15.621-40.947 15.621-56.569 0l-135.83-135.83c-15.621-15.621-15.621-40.947 0-56.569l135.83-135.83c15.621-15.621 40.947-15.621 56.569 0l134.95 134.95c15.621 15.621 15.621 40.947 0 56.569z"/>
        </svg>
      </li>
      <li class="text-gray-500">Analyze Tickets</li>
    </ol>
  </nav>

  <!-- Page Header -->
  <div class="mb-8">
    <h1 class="text-3xl font-bold text-gray-900 mb-2">Ticket Complexity Analysis</h1>
    <p class="text-gray-600">Review the complexity scores of your tickets to identify candidates for AI assignment</p>
  </div>

  <!-- Summary Statistics -->
  <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
    <div class="bg-white border border-gray-200 rounded-lg p-6">
      <div class="text-sm text-gray-600 mb-1">Total Tickets</div>
      <div class="text-3xl font-bold text-gray-900"><%= @total_count %></div>
    </div>
    <div class="bg-green-50 border border-green-200 rounded-lg p-6">
      <div class="text-sm text-green-700 mb-1">Low Complexity</div>
      <div class="text-3xl font-bold text-green-900"><%= @low_count %></div>
    </div>
    <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-6">
      <div class="text-sm text-yellow-700 mb-1">Medium Complexity</div>
      <div class="text-3xl font-bold text-yellow-900"><%= @medium_count %></div>
    </div>
    <div class="bg-red-50 border border-red-200 rounded-lg p-6">
      <div class="text-sm text-red-700 mb-1">High Complexity</div>
      <div class="text-3xl font-bold text-red-900"><%= @high_count %></div>
    </div>
  </div>

  <!-- Selection Summary Banner -->
  <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
    <div class="flex items-center justify-between">
      <div class="flex items-center">
        <svg class="h-5 w-5 text-blue-400 mr-3" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
        </svg>
        <div>
          <h3 class="text-sm font-medium text-blue-800">
            <span id="selection-count"><%= @selected_count %></span> <span id="selection-label"><%= @selected_count == 1 ? 'ticket' : 'tickets' %></span> selected for assignment
          </h3>
          <div class="text-xs text-blue-700 mt-1">
            <span id="selection-breakdown">
              <span id="selected-low-count"><%= @selected_low_count %></span> low,
              <span id="selected-medium-count"><%= @selected_medium_count %></span> medium,
              <span id="selected-high-count"><%= @selected_high_count %></span> high
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Warning for large selection -->
  <div id="large-selection-warning" class="bg-orange-50 border border-orange-200 rounded-lg p-4 mb-6 <%= 'hidden' unless @selected_count > 50 %>">
    <div class="flex items-start">
      <div class="flex-shrink-0">
        <svg class="h-5 w-5 text-orange-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
        </svg>
      </div>
      <div class="ml-3">
        <h3 class="text-sm font-medium text-orange-800">
          Large batch size warning
        </h3>
        <div class="mt-2 text-sm text-orange-700">
          Warning: Selecting too many tickets may reduce success rate. Consider limiting to 20-30 tickets per batch for optimal results.
        </div>
      </div>
    </div>
  </div>

  <!-- Info banner for no low complexity -->
  <% if @low_count == 0 %>
    <div class="bg-orange-50 border border-orange-200 rounded-lg p-4 mb-6">
      <div class="flex items-start">
        <div class="flex-shrink-0">
          <svg class="h-5 w-5 text-orange-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
          </svg>
        </div>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-orange-800">
            No low-complexity bugs found
          </h3>
          <div class="mt-2 text-sm text-orange-700">
            You can manually select tickets to assign.
          </div>
        </div>
      </div>
    </div>
  <% elsif @low_bugs_count > 0 %>
    <div class="bg-green-50 border border-green-200 rounded-lg p-4 mb-6">
      <div class="flex items-start">
        <div class="flex-shrink-0">
          <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
          </svg>
        </div>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-green-800">
            <%= @low_bugs_count %> low-complexity <%= 'bug'.pluralize(@low_bugs_count) %> identified
          </h3>
          <div class="mt-2 text-sm text-green-700">
            These tickets have been automatically preselected as suitable candidates for AI-assisted resolution.
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <!-- Selection Controls -->
  <div class="bg-white border border-gray-200 rounded-lg p-4 mb-4">
    <div class="flex items-center gap-4 flex-wrap">
      <button type="button" id="select-all-btn" class="px-3 py-1.5 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">
        Select All
      </button>
      <button type="button" id="deselect-all-btn" class="px-3 py-1.5 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">
        Deselect All
      </button>
      <button type="button" id="select-low-btn" class="px-3 py-1.5 border border-green-300 bg-green-50 rounded-md text-sm font-medium text-green-700 hover:bg-green-100">
        Select Low-Complexity Only
      </button>
      <div class="ml-auto flex items-center gap-4">
        <div>
          <label class="text-sm font-medium text-gray-700 mr-2">Filter:</label>
          <select id="complexity-filter" class="border border-gray-300 rounded-md px-3 py-1 text-sm">
            <option value="all">All Complexities</option>
            <option value="low">Low Only</option>
            <option value="medium">Medium Only</option>
            <option value="high">High Only</option>
          </select>
        </div>
        <div>
          <label class="text-sm font-medium text-gray-700 mr-2">Sort by:</label>
          <select id="sort-select" class="border border-gray-300 rounded-md px-3 py-1 text-sm">
            <option value="score-asc">Complexity Score (Low to High)</option>
            <option value="score-desc">Complexity Score (High to Low)</option>
            <option value="key">Ticket Key</option>
          </select>
        </div>
      </div>
    </div>
  </div>

  <!-- Form for saving selection -->
  <%= form_with url: save_selection_mission_path(@mission), method: :post, id: "selection-form" do |f| %>
    <!-- Tickets Table -->
    <div class="bg-white border border-gray-200 rounded-lg overflow-hidden mb-6">
      <table class="min-w-full divide-y divide-gray-200" id="tickets-table">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-12">
              <input type="checkbox" id="header-checkbox" class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
            </th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Key</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Summary</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Complexity</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Score</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% @tickets.each do |ticket| %>
            <% issue_type = ticket.raw_data&.dig("fields", "issuetype", "name") %>
            <% is_low_bug = issue_type == "Bug" && ticket.low_complexity? %>
            <% should_preselect = @apply_preselection && is_low_bug %>
            <% is_selected = ticket.selected? || should_preselect %>

            <tr class="ticket-row hover:bg-gray-50 <%= 'bg-blue-50' if is_selected %>"
                data-ticket-id="<%= ticket.id %>"
                data-complexity="<%= ticket.complexity_category %>"
                data-score="<%= ticket.complexity_score %>"
                data-key="<%= ticket.jira_key %>"
                data-is-bug="<%= is_low_bug %>">
              <td class="px-6 py-4 whitespace-nowrap">
                <input type="checkbox"
                       name="selected_tickets[]"
                       value="<%= ticket.id %>"
                       class="ticket-checkbox h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
                       <%= 'checked' if is_selected %>>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600 cursor-pointer" onclick="toggleFactors('<%= ticket.id %>')">
                <%= ticket.jira_key %>
              </td>
              <td class="px-6 py-4 text-sm text-gray-900 cursor-pointer" onclick="toggleFactors('<%= ticket.id %>')">
                <%= ticket.summary %>
                <% if is_low_bug %>
                  <span class="ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800">
                    AI Candidate
                  </span>
                <% end %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= issue_type %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <%= ticket.status %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <% if ticket.low_complexity? %>
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                    Low
                  </span>
                <% elsif ticket.medium_complexity? %>
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                    Medium
                  </span>
                <% else %>
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                    High
                  </span>
                <% end %>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                <%= ticket.complexity_score %>
              </td>
            </tr>
          <tr id="factors-<%= ticket.id %>" class="hidden">
            <td colspan="7" class="px-6 py-4 bg-gray-50">
              <div class="text-sm">
                <h4 class="font-semibold text-gray-700 mb-3">Complexity Factors</h4>
                <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
                  <div>
                    <span class="text-gray-600">Description Length:</span>
                    <span class="ml-2 font-medium"><%= ticket.complexity_factors&.dig("description_length") || 0 %></span>
                  </div>
                  <div>
                    <span class="text-gray-600">Comments:</span>
                    <span class="ml-2 font-medium"><%= ticket.complexity_factors&.dig("comments") || 0 %></span>
                  </div>
                  <div>
                    <span class="text-gray-600">Linked Issues:</span>
                    <span class="ml-2 font-medium"><%= ticket.complexity_factors&.dig("linked_issues") || 0 %></span>
                  </div>
                  <div>
                    <span class="text-gray-600">Issue Type:</span>
                    <span class="ml-2 font-medium"><%= ticket.complexity_factors&.dig("issue_type") || 0 %></span>
                  </div>
                  <div>
                    <span class="text-gray-600">Labels:</span>
                    <span class="ml-2 font-medium"><%= ticket.complexity_factors&.dig("labels") || 0 %></span>
                  </div>
                  <div>
                    <span class="text-gray-600">Time in Backlog:</span>
                    <span class="ml-2 font-medium"><%= ticket.complexity_factors&.dig("time_in_backlog") || 0 %></span>
                  </div>
                </div>
                <div class="mt-3 text-xs text-gray-500">
                  Base score: 3 | Total adjustments: <%= (ticket.complexity_score || 3) - 3 %> | Final score: <%= ticket.complexity_score %>
                </div>
              </div>
            </td>
          </tr>
          <% end %>
        </tbody>
      </table>
    </div>

    <!-- Action Buttons -->
    <div class="flex justify-between items-center">
      <%= link_to "Back to Preview", preview_mission_tickets_path(@mission), class: "px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50" %>
      <button type="submit" id="assign-btn" class="px-6 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700">
        Confirm selection (<span id="assign-count"><%= @selected_count %></span>)
      </button>
    </div>
  <% end %>
</div>

<script>
  // Toggle factors display
  function toggleFactors(ticketId) {
    const factorsRow = document.getElementById('factors-' + ticketId);
    if (factorsRow.classList.contains('hidden')) {
      factorsRow.classList.remove('hidden');
    } else {
      factorsRow.classList.add('hidden');
    }
  }

  // Filter functionality
  document.getElementById('complexity-filter').addEventListener('change', function() {
    const filter = this.value;
    const tbody = document.querySelector('#tickets-table tbody');
    const allRows = tbody.querySelectorAll('tr');

    allRows.forEach(row => {
      // Skip factor rows
      if (row.id && row.id.startsWith('factors-')) {
        return;
      }

      if (row.classList.contains('ticket-row')) {
        const ticketId = row.dataset.ticketId;
        const factorRow = document.getElementById('factors-' + ticketId);

        if (filter === 'all' || row.dataset.complexity === filter) {
          row.style.display = '';
          // Keep factor row state consistent
          if (factorRow && !factorRow.classList.contains('hidden')) {
            factorRow.style.display = '';
          }
        } else {
          row.style.display = 'none';
          if (factorRow) {
            factorRow.style.display = 'none';
          }
        }
      }
    });

    updateHeaderCheckbox();
  });

  // Sort functionality
  function sortTickets(sortBy) {
    const tbody = document.querySelector('#tickets-table tbody');
    const ticketRows = Array.from(tbody.querySelectorAll('.ticket-row'));

    // Create pairs of ticket row and its factor row
    const pairs = ticketRows.map(ticketRow => {
      const ticketId = ticketRow.dataset.ticketId;
      const factorRow = document.getElementById('factors-' + ticketId);
      return { ticketRow, factorRow };
    });

    pairs.sort((a, b) => {
      if (sortBy === 'score-asc') {
        return parseInt(a.ticketRow.dataset.score) - parseInt(b.ticketRow.dataset.score);
      } else if (sortBy === 'score-desc') {
        return parseInt(b.ticketRow.dataset.score) - parseInt(a.ticketRow.dataset.score);
      } else if (sortBy === 'key') {
        return a.ticketRow.dataset.key.localeCompare(b.ticketRow.dataset.key);
      }
    });

    // Append in sorted order
    pairs.forEach(pair => {
      tbody.appendChild(pair.ticketRow);
      tbody.appendChild(pair.factorRow);
    });
  }

  document.getElementById('sort-select').addEventListener('change', function() {
    sortTickets(this.value);
  });

  // Sort on page load (default to score-asc)
  // Use turbo:load for Turbo navigation and DOMContentLoaded for full page loads
  document.addEventListener('turbo:load', function() {
    sortTickets('score-asc');
    initializeSelection();
  });

  document.addEventListener('DOMContentLoaded', function() {
    sortTickets('score-asc');
    initializeSelection();
  });

  // Selection functionality
  function initializeSelection() {
    const checkboxes = document.querySelectorAll('.ticket-checkbox');
    const headerCheckbox = document.getElementById('header-checkbox');
    const selectAllBtn = document.getElementById('select-all-btn');
    const deselectAllBtn = document.getElementById('deselect-all-btn');
    const selectLowBtn = document.getElementById('select-low-btn');
    const complexityFilter = document.getElementById('complexity-filter');

    // Update counts on page load
    updateSelectionCounts();

    // Checkbox change handler
    checkboxes.forEach(checkbox => {
      checkbox.addEventListener('change', function() {
        updateRowHighlight(this);
        updateSelectionCounts();
        updateHeaderCheckbox();
      });
    });

    // Header checkbox handler
    if (headerCheckbox) {
      headerCheckbox.addEventListener('change', function() {
        const visibleCheckboxes = getVisibleCheckboxes();
        visibleCheckboxes.forEach(cb => {
          cb.checked = this.checked;
          updateRowHighlight(cb);
        });
        updateSelectionCounts();
      });
    }

    // Select all button
    selectAllBtn.addEventListener('click', function() {
      checkboxes.forEach(cb => {
        cb.checked = true;
        updateRowHighlight(cb);
      });
      updateSelectionCounts();
      updateHeaderCheckbox();
    });

    // Deselect all button
    deselectAllBtn.addEventListener('click', function() {
      checkboxes.forEach(cb => {
        cb.checked = false;
        updateRowHighlight(cb);
      });
      updateSelectionCounts();
      updateHeaderCheckbox();
    });

    // Select low complexity only
    selectLowBtn.addEventListener('click', function() {
      checkboxes.forEach(cb => {
        const row = cb.closest('tr');
        const isLowBug = row.dataset.isBug === 'true';
        cb.checked = isLowBug;
        updateRowHighlight(cb);
      });
      updateSelectionCounts();
      updateHeaderCheckbox();
    });
  }

  function updateRowHighlight(checkbox) {
    const row = checkbox.closest('tr');
    if (checkbox.checked) {
      row.classList.add('bg-blue-50');
    } else {
      row.classList.remove('bg-blue-50');
    }
  }

  function updateSelectionCounts() {
    const checkboxes = document.querySelectorAll('.ticket-checkbox:checked');
    const count = checkboxes.length;

    // Count by complexity
    let lowCount = 0, mediumCount = 0, highCount = 0;
    checkboxes.forEach(cb => {
      const row = cb.closest('tr');
      const complexity = row.dataset.complexity;
      if (complexity === 'low') lowCount++;
      else if (complexity === 'medium') mediumCount++;
      else if (complexity === 'high') highCount++;
    });

    // Update selection count display
    document.getElementById('selection-count').textContent = count;
    document.getElementById('selection-label').textContent = count === 1 ? 'ticket' : 'tickets';
    document.getElementById('selected-low-count').textContent = lowCount;
    document.getElementById('selected-medium-count').textContent = mediumCount;
    document.getElementById('selected-high-count').textContent = highCount;

    // Update button text
    document.getElementById('assign-count').textContent = count;

    // Show/hide large selection warning
    const warning = document.getElementById('large-selection-warning');
    if (count > 50) {
      warning.classList.remove('hidden');
    } else {
      warning.classList.add('hidden');
    }
  }

  function updateHeaderCheckbox() {
    const headerCheckbox = document.getElementById('header-checkbox');
    const visibleCheckboxes = getVisibleCheckboxes();

    if (visibleCheckboxes.length === 0) {
      headerCheckbox.checked = false;
      headerCheckbox.indeterminate = false;
      return;
    }

    const checkedCount = visibleCheckboxes.filter(cb => cb.checked).length;

    if (checkedCount === 0) {
      headerCheckbox.checked = false;
      headerCheckbox.indeterminate = false;
    } else if (checkedCount === visibleCheckboxes.length) {
      headerCheckbox.checked = true;
      headerCheckbox.indeterminate = false;
    } else {
      headerCheckbox.checked = false;
      headerCheckbox.indeterminate = true;
    }
  }

  function getVisibleCheckboxes() {
    const checkboxes = document.querySelectorAll('.ticket-checkbox');
    return Array.from(checkboxes).filter(cb => {
      const row = cb.closest('tr');
      return row.style.display !== 'none';
    });
  }
</script>