<div class="w-full max-w-4xl">
  <!-- Header -->
  <div class="mb-6">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-bold text-gray-900">Edit JQL Query</h1>
        <p class="text-gray-600 mt-1">Session: <%= @session.name %></p>
      </div>
      <%= link_to "Back to Queries", session_jql_queries_path(@session),
          class: "inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50" %>
    </div>
  </div>

  <%= form_with model: [@session, @jql_query], local: true, class: "space-y-6" do |form| %>
    <!-- Error messages -->
    <% if @jql_query.errors.any? %>
      <div class="bg-red-50 border border-red-200 rounded-md p-4">
        <div class="flex">
          <div class="flex-shrink-0">
            <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
            </svg>
          </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-red-800">Please correct the following errors:</h3>
            <ul class="mt-2 text-sm text-red-700 list-disc list-inside">
              <% @jql_query.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        </div>
      </div>
    <% end %>

    <div class="bg-white shadow rounded-lg">
      <div class="px-6 py-5">
        <!-- Query Name (Optional) -->
        <div class="mb-6">
          <%= form.label :name, class: "block text-sm font-medium text-gray-700 mb-2" do %>
            Query Name <span class="text-gray-400 text-xs">(Optional)</span>
          <% end %>
          <%= form.text_field :name,
              class: "block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500",
              placeholder: "e.g., Open High Priority Bugs" %>
        </div>

        <!-- Query Description (Optional) -->
        <div class="mb-6">
          <%= form.label :description, class: "block text-sm font-medium text-gray-700 mb-2" do %>
            Description <span class="text-gray-400 text-xs">(Optional)</span>
          <% end %>
          <%= form.text_area :description,
              rows: 2,
              class: "block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500",
              placeholder: "Describe what this query is for..." %>
        </div>

        <!-- JQL Query Input -->
        <div class="mb-6">
          <%= form.label :query_text, class: "block text-sm font-medium text-gray-700 mb-2" do %>
            JQL Query <span class="text-red-500">*</span>
          <% end %>
          <%= form.text_area :query_text,
              rows: 4,
              class: "block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 font-mono text-sm",
              placeholder: 'project = "YOUR_PROJECT" AND issuetype = Bug AND status != Done',
              id: "jql_query_text",
              data: { validation_url: session_jql_queries_path(@session, action: :validate) } %>

          <!-- Real-time validation feedback -->
          <div id="validation-feedback" class="mt-2 hidden">
            <div id="validation-error" class="text-sm text-red-600 hidden"></div>
            <div id="validation-warnings" class="text-sm text-yellow-600 hidden"></div>
            <div id="validation-suggestions" class="text-sm text-blue-600 hidden"></div>
          </div>

          <p class="mt-1 text-sm text-gray-500">
            Enter a valid JQL query to fetch tickets from JIRA.
            <a href="#" class="text-blue-600 hover:text-blue-500" onclick="toggleJqlHelp()">Need help with JQL?</a>
          </p>
        </div>

        <!-- JQL Help (Initially Hidden) -->
        <div id="jql-help" class="mb-6 bg-blue-50 border border-blue-200 rounded-lg p-4 hidden">
          <h4 class="text-sm font-medium text-blue-800 mb-3">JQL Quick Reference</h4>
          <div class="text-sm text-blue-700 space-y-2">
            <div><strong>Basic Structure:</strong> field operator value</div>
            <div><strong>Examples:</strong></div>
            <ul class="list-disc list-inside ml-4 space-y-1">
              <li><code>project = "MYPROJECT"</code></li>
              <li><code>issuetype = Bug</code></li>
              <li><code>status != Done</code></li>
              <li><code>priority IN (High, Critical)</code></li>
              <li><code>assignee IS EMPTY</code></li>
            </ul>
            <div><strong>Combine with:</strong> AND, OR, NOT</div>
            <div><strong>Order by:</strong> ORDER BY created DESC</div>
          </div>
        </div>

        <!-- Current Status Info -->
        <div class="bg-gray-50 border border-gray-200 rounded-lg p-4 mb-6">
          <div class="flex items-center">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium
              <%= case @jql_query.status
                  when 'pending' then 'bg-yellow-100 text-yellow-800'
                  when 'completed' then 'bg-green-100 text-green-800'
                  when 'executing' then 'bg-blue-100 text-blue-800'
                  when 'failed' then 'bg-red-100 text-red-800'
                  else 'bg-gray-100 text-gray-800'
                  end %>">
              <%= @jql_query.status.titleize %>
            </span>
            <span class="ml-3 text-sm text-gray-600"><%= @jql_query.execution_summary %></span>
          </div>
          <% if @jql_query.status == 'completed' && @jql_query.ticket_count && @jql_query.ticket_count > 0 %>
            <p class="text-sm text-gray-500 mt-2">
              This query found <%= @jql_query.ticket_count %> tickets.
              <%= link_to "View tickets", session_tickets_path(@session), class: "text-blue-600 hover:text-blue-500" %>
            </p>
          <% end %>
        </div>
      </div>
    </div>

    <!-- Templates Section -->
    <% if @query_templates.any? %>
      <div class="bg-white shadow rounded-lg">
        <div class="px-6 py-4 border-b border-gray-200">
          <h3 class="text-lg font-medium text-gray-900">Query Templates</h3>
          <p class="text-sm text-gray-500 mt-1">Replace current query with a template</p>
        </div>
        <div class="px-6 py-4">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <% @query_templates.each do |template| %>
              <div class="border border-gray-200 rounded-lg p-4 hover:border-blue-300 cursor-pointer template-card"
                   data-query="<%= template[:query] %>">
                <h4 class="font-medium text-gray-900"><%= template[:name] %></h4>
                <p class="text-sm text-gray-600 mt-1"><%= template[:description] %></p>
                <code class="text-xs text-gray-500 bg-gray-50 px-2 py-1 rounded mt-2 block">
                  <%= truncate(template[:query], length: 50) %>
                </code>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    <% end %>

    <!-- Form Actions -->
    <div class="flex justify-between pt-6">
      <div>
        <%= link_to "Delete Query", session_jql_query_path(@session, @jql_query),
            method: :delete,
            data: { confirm: "Are you sure you want to delete this query?" },
            class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-red-700 bg-red-100 hover:bg-red-200" %>
      </div>
      <div class="flex space-x-3">
        <%= link_to "Cancel", session_jql_queries_path(@session),
            class: "inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50" %>
        <%= form.submit "Update Query",
            class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 disabled:opacity-50",
            id: "submit-button" %>
      </div>
    </div>
  <% end %>
</div>

<script>
function toggleJqlHelp() {
  const helpDiv = document.getElementById('jql-help');
  helpDiv.classList.toggle('hidden');
}

// Template selection
document.querySelectorAll('.template-card').forEach(card => {
  card.addEventListener('click', function() {
    if (confirm('Replace current query with this template?')) {
      const query = this.dataset.query;
      document.getElementById('jql_query_text').value = query;
      validateQuery();
    }
  });
});

// Real-time validation (same as new.html.erb)
let validationTimeout;
document.getElementById('jql_query_text').addEventListener('input', function() {
  clearTimeout(validationTimeout);
  validationTimeout = setTimeout(validateQuery, 500);
});

function validateQuery() {
  const queryText = document.getElementById('jql_query_text').value.trim();
  const feedbackDiv = document.getElementById('validation-feedback');
  const errorDiv = document.getElementById('validation-error');
  const warningsDiv = document.getElementById('validation-warnings');
  const suggestionsDiv = document.getElementById('validation-suggestions');
  const submitButton = document.getElementById('submit-button');

  if (!queryText) {
    feedbackDiv.classList.add('hidden');
    submitButton.disabled = false;
    return;
  }

  const result = validateJqlClient(queryText);

  if (result.error) {
    errorDiv.textContent = result.error;
    errorDiv.classList.remove('hidden');
    submitButton.disabled = true;
  } else {
    errorDiv.classList.add('hidden');
    submitButton.disabled = false;
  }

  if (result.warnings && result.warnings.length > 0) {
    warningsDiv.innerHTML = 'Warnings: ' + result.warnings.join(', ');
    warningsDiv.classList.remove('hidden');
  } else {
    warningsDiv.classList.add('hidden');
  }

  if (result.suggestions && result.suggestions.length > 0) {
    suggestionsDiv.innerHTML = 'Suggestions: ' + result.suggestions.join(', ');
    suggestionsDiv.classList.remove('hidden');
  } else {
    suggestionsDiv.classList.add('hidden');
  }

  feedbackDiv.classList.remove('hidden');
}

function validateJqlClient(query) {
  const result = { warnings: [], suggestions: [] };

  if (query.length > 2000) {
    result.error = 'Query is too long (max 2000 characters)';
    return result;
  }

  const openParens = (query.match(/\(/g) || []).length;
  const closeParens = (query.match(/\)/g) || []).length;
  if (openParens !== closeParens) {
    result.error = 'Unbalanced parentheses';
    return result;
  }

  const singleQuotes = (query.match(/'/g) || []).length;
  const doubleQuotes = (query.match(/"/g) || []).length;
  if (singleQuotes % 2 !== 0) {
    result.error = 'Unmatched single quotes';
    return result;
  }
  if (doubleQuotes % 2 !== 0) {
    result.error = 'Unmatched double quotes';
    return result;
  }

  if (!query.toLowerCase().includes('project')) {
    result.suggestions.push('Consider specifying a project');
  }
  if (!query.toLowerCase().includes('order by')) {
    result.suggestions.push('Consider adding ORDER BY for consistent results');
  }

  return result;
}

// Initialize validation on page load
document.addEventListener('DOMContentLoaded', function() {
  const queryText = document.getElementById('jql_query_text').value;
  if (queryText.trim()) {
    validateQuery();
  }
});
</script>